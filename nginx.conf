
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	proxy_temp_path /dev/shm/transfer/proxy_temp_path;
	proxy_cache_path /dev/shm/transfer/proxy_cache_path levels=1:2 keys_zone=cache_one:300m inactive=2d max_size=300m;
	proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
	
    server {
        listen       8081;
        server_name  localhost;
		#root /home/aiwac/apache-tomcat-8.0.47/webapps/website;   #根目录
		root /usr/local/nginx/lecture;  #根目录

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		
		
		#禁止访问tomcat配置目录
		location ~^/(WEB-INF|META-INF) {			
			deny all;
        }
		
		#静态资源使用缓存
        location ~\.(mp4|jpg|png|html|css|js)$ {
			#使用web缓存区cache_one
            proxy_cache cache_one;
			
			#将http请求中的range值（$http_range）放到代理转发的http请求头中作为参数range的值。高版本nginx不需要
			#proxy_set_header Range $http_range; 
			
			#对200 304 302状态码设置缓存时间5天，其他的7天
            proxy_cache_valid 200 206 304 302 2d;
            proxy_cache_valid any 1d;

            #以域名、URI、参数组合成Web缓存的Key值，Nginx根据Key值哈希，存储缓存内容到二级缓存目录内
			proxy_cache_key $host$uri$is_args$args;
            #proxy_cache_key $host$uri$is_args$args$http_range;
			
			#增加一个header字段方便在浏览器查看是否击中缓存（生产中可注释）
            add_header X-Cache '$upstream_cache_status from $host';
			add_header X-Via '$upstream_cache_status from $host';
			
			#proxy_pass http://127.0.0.1:80; 

        }
		
		
		#其他静态资源以及非静态资源
		location / {			
			proxy_pass http://127.0.0.1:80; 

        }

        #error_page  404              /404.html;

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
